<% layout('layout') -%>

<!-- ==== Sidebar ==== -->
<div class="sidebar-container">
  <h2>Categories</h2>
  <a href="#" class="category">🍽️ Food</a>
  <a href="#" class="category">🧳 Travel</a>
  <a href="#" class="category">💊 Health</a>
  <a href="#" class="category">📚 Education</a>
  <a href="#" class="category">🛍️ Shopping</a>
  <a href="#" class="category">🏠 Rent</a>
  <a href="#" class="category">💡 Bills</a>
  <a href="#" class="category">🎬 Entertainment</a>
  <a href="#" class="category">📶 Subscriptions</a>
  <a href="#" class="category">🎁 Gift</a>
  <a href="#" class="category">🛠️ Maintenance</a>
  <a href="#" class="category">🚑 Insurance</a>
  <a href="#" class="category">👶 Kids</a>
  <a href="#" class="category">🐶 Pet care</a>
  <a href="#" class="category">🌐 Internet</a>
  <a href="#" class="category">📞 Mobile Recharge</a>
  <a href="#" class="category">🛒 Essentials</a>
  <a href="#" class="category">👨‍👩‍👧 Family</a>
  <a href="#" class="category">📦 Others</a>
</div>

<!-- ==== Main Section: Date filter + Chart ==== -->
<div class="main-section">
  <div class="date-filter">
    <label for="from">From:</label>
    <input type="date" id="from">
    <label for="to">To:</label>
    <input type="date" id="to">
    <button onclick="filterByDate()">Apply</button>
  </div>

  <div id="chartContainer">
    <canvas id="categoryChart"></canvas>
  </div>
</div>

<!-- ==== Styles ==== -->
<style>
  body {
    background: #f1f5f9;
    font-family: 'Segoe UI', sans-serif;
    margin: 0;
    padding: 0;
  }

  .sidebar-container {
    width: 270px;
    background: linear-gradient(to bottom, #ffffff, #f8fafc);
    padding: 25px 20px;
    border-radius: 0 16px 16px 0;
    box-shadow: 4px 0 12px rgba(0, 0, 0, 0.05);
    position: fixed;
    top: 50px;
    bottom: 0;
    left: 0;
    overflow-y: auto;
    z-index: 10;
  }

  .sidebar-container h2 {
    font-size: 22px;
    font-weight: 600;
    text-align: center;
    color: #111827;
    margin-bottom: 18px;
  }

  .category {
    display: block;
    padding: 12px 14px;
    margin-bottom: 10px;
    text-decoration: none;
    color: #1f2937;
    background-color: #f1f5f9;
    border-radius: 10px;
    font-size: 15px;
    font-weight: 500;
    transition: all 0.2s ease-in-out;
  }

  .category:hover {
    background-color: #e2e8f0;
    transform: scale(1.015);
  }

  .category.active {
    background-color: #c7d2fe;
    color: #1e3a8a;
    font-weight: 600;
    border: 2px solid #3b82f6;
    box-shadow: 0 0 0 3px rgba(59,130,246,0.2);
  }

  .main-section {
    margin-left: 290px;
    padding: 40px 30px;
  }

  .date-filter {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 30px;
  }

  .date-filter label {
    font-weight: 500;
    font-size: 15px;
    color: #1f2937;
  }

  .date-filter input,
  .date-filter button {
    padding: 8px 12px;
    border-radius: 8px;
    border: 1px solid #cbd5e1;
    background: #ffffff;
    font-size: 14px;
    color: #1e293b;
  }

  .date-filter button {
    background: #3b82f6;
    color: #fff;
    border: none;
    cursor: pointer;
    font-weight: 500;
    transition: background-color 0.3s ease;
  }

  .date-filter button:hover {
    background: #2563eb;
  }

  #chartContainer {
    background: #fff;
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.06);
    max-width: 560px;
    width: 100%;
  }

  canvas {
    width: 100% !important;
    height: auto !important;
  }

  @media screen and (max-width: 768px) {
    .sidebar-container {
      display: none;
    }

    .main-section {
      margin-left: 0;
      padding: 20px;
    }

    .date-filter {
      flex-direction: column;
      align-items: stretch;
      gap: 10px;
    }

    .date-filter label,
    .date-filter input,
    .date-filter button {
      width: 100%;
    }
  }
</style>

<!-- ==== Chart JS + Script ==== -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  const rawData = <%- chartData %>;

  const labels = rawData.map(item => item.category);
  const data = rawData.map(item => item.amount);

  const fixedColors = [
    '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',
    '#FF9F40', '#8DD18D', '#D3A4FF', '#F67019', '#00A8B5',
    '#FFD700', '#C71585', '#2E8B57', '#CD5C5C', '#FFA07A',
    '#20B2AA', '#87CEEB', '#DDA0DD', '#90EE90', '#778899'
  ];

  const backgroundColors = labels.map((_, i) => fixedColors[i % fixedColors.length]);
  const originalColors = [...backgroundColors];

  const ctx = document.getElementById('categoryChart').getContext('2d');
  const chart = new Chart(ctx, {
    type: 'pie',
    data: {
      labels,
      datasets: [{
        data,
        backgroundColor: backgroundColors,
        borderColor: backgroundColors.map(() => 'transparent'),
        borderWidth: backgroundColors.map(() => 0)
      }]
    },
    options: {
      responsive: true,
      plugins: {
        legend: { position: 'bottom' }
      }
    }
  });

  function shadeColor(color, percent) {
    let R = parseInt(color.substring(1, 3), 16);
    let G = parseInt(color.substring(3, 5), 16);
    let B = parseInt(color.substring(5, 7), 16);

    R = parseInt(R * (100 + percent) / 100);
    G = parseInt(G * (100 + percent) / 100);
    B = parseInt(B * (100 + percent) / 100);

    R = (R < 255) ? R : 255;
    G = (G < 255) ? G : 255;
    B = (B < 255) ? B : 255;

    return "#" + [R, G, B].map(x => x.toString(16).padStart(2, '0')).join('');
  }

  document.querySelectorAll('.category').forEach(el => {
    el.addEventListener('click', () => {
      document.querySelectorAll('.category').forEach(cat => cat.classList.remove('active'));
      el.classList.add('active');

      const label = el.textContent.trim().split(" ").slice(1).join(" ");
      const index = labels.indexOf(label);

      if (index !== -1) {
        chart.data.datasets[0].backgroundColor = [...originalColors];
        chart.data.datasets[0].backgroundColor[index] = shadeColor(originalColors[index], -25);
        chart.data.datasets[0].borderColor = labels.map((_, i) =>
          i === index ? '#000000' : 'transparent'
        );
        chart.data.datasets[0].borderWidth = labels.map((_, i) =>
          i === index ? 4 : 0
        );
        chart.update();
      }
    });
  });

  async function filterByDate() {
    const from = document.getElementById('from').value;
    const to = document.getElementById('to').value;

    if (!from || !to) {
      alert("Please select both dates.");
      return;
    }

    const response = await fetch(`/categories/data?from=${from}&to=${to}`);
    const filteredData = await response.json();

    const labels = filteredData.map(item => item.category);
    const data = filteredData.map(item => item.amount);
    const newColors = labels.map((_, i) => fixedColors[i % fixedColors.length]);

    chart.data.labels = labels;
    chart.data.datasets[0].data = data;
    chart.data.datasets[0].backgroundColor = newColors;
    chart.data.datasets[0].borderColor = newColors.map(() => 'transparent');
    chart.data.datasets[0].borderWidth = newColors.map(() => 0);
    chart.update();
  }
</script>

