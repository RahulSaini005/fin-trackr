<% layout('layout') -%>

<style>
  body {
    font-family: 'Segoe UI', sans-serif;
    background-color: #f4f6f8;
    margin: 0;
    padding: 0;
  }

  .main-wrapper {
    padding: 30px 40px;
    max-width: 100%;
    box-sizing: border-box;
  }

  h2 {
    color: #1f2937;
    margin-bottom: 20px;
  }

  .filter-section {
    display: flex;
    gap: 20px;
    justify-content: space-between;
    margin-bottom: 30px;
    align-items: center;
    flex-wrap: wrap;
  }

  .filter-section input {
    padding: 10px;
    border-radius: 8px;
    border: 1px solid #ccc;
    font-size: 16px;
  }

  .filter-section button {
    padding: 10px 20px;
    background-color: #2563eb;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 16px;
    cursor: pointer;
  }

  .filter-section button:hover {
    background-color: #1e40af;
  }

  .table-container {

       max-height: 300px; /* üëà Fixed height */
    overflow-y: auto; 
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    overflow-x: auto;
  }

  #reportTable {
    width: 100%;
    border-collapse: collapse;
  }

  #reportTable th {
    background-color: #2563eb;
    color: white;
    padding: 14px;
    text-align: left;
    font-size: 16px;
    position: sticky;
    top: 0;
    z-index: 5;
  }

  #reportTable td {
    padding: 12px 14px;
    border-bottom: 1px solid #eee;
    font-size: 15px;
  }

  #reportTable tbody tr:hover {
    background-color: #f0f4ff;
  }

  .summary {
    margin-top: 30px;
    font-size: 18px;
    background-color: #e0ecff;
    padding: 20px;
    border-radius: 10px;
    color: #1f2937;
  }

  .summary p {
    margin: 10px 0;
  }

  /* Optional scrollbar styling */
  .table-container::-webkit-scrollbar {
    height: 8px;
    width: 8px;
  }

  .table-container::-webkit-scrollbar-thumb {
    background-color: #2563eb;
    border-radius: 10px;
  }

  .table-container::-webkit-scrollbar-track {
    background-color: #f0f0f0;
  }


  .download-btn {
  background: linear-gradient(to right, #2563eb, #1e40af);
  color: #fff;
  font-size: 16px;
  font-weight: 500;
  padding: 10px 24px;
  border: none;
  border-radius: 12px;
  cursor: pointer;
  position: relative;
  bottom: 420px;
  width: 150px;
  height: 40px;
  box-shadow: 0 4px 14px rgba(37, 99, 235, 0.3);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.download-btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 20px rgba(30, 64, 175, 0.4);
}

.download-btn:active {
  transform: scale(0.97);
  box-shadow: 0 2px 6px rgba(30, 64, 175, 0.2);
}

@media (max-width: 768px) {
  .main-wrapper {
    padding: 20px 16px;
  }

  .filter-section {
    flex-direction: column;
    align-items: flex-start;
    gap: 12px;
  }

  .filter-section input {
    width: 100%;
  }

  .filter-section button {
    width: 100%;
  }

  .table-container {
    max-height: 280px;
    overflow-x: auto;
  }

  .summary {
    font-size: 16px;
    padding: 16px;
    word-break: break-word;
  }

  .download-btn {
    position: static;
    margin-top: 20px;
    width: 100%;
  }

  #excelBtn {
    display: none;
  }

  table {
    min-width: 600px;
  }
}


</style>

<div class="main-wrapper">
  <h2>üìä Transaction Report</h2>

  <div class="filter-section">
  <div style="display: flex; gap: 20px; flex-wrap: wrap;">
    <label>
      From:
      <input type="date" id="fromDate">
    </label>
    <label>
      To:
      <input type="date" id="toDate">
    </label>
    <button onclick="updateReportTable()">üîç Show</button>
  </div>

  <button class="download-btn" onclick="downloadExcel()" style="position: absolute; top: 30px; right: 40px;">‚¨áÔ∏è Download</button>

</div>


  <div class="table-container">
    <table id="reportTable">
      <thead>
        <tr>
          <th>Date</th>
          <th>Title</th>
          <th>Category</th>
          <th>Type</th>
          <th>Amount</th>
        </tr>
      </thead>
      <tbody>
        <tr><td colspan="5" style="text-align:center;">Loading...</td></tr>
      </tbody>
    </table>
  </div>

  <div class="summary">
    <p>Total Income: ‚Çπ<span id="totalIncome">0</span></p>
    <p>Total Expense: ‚Çπ<span id="totalExpense">0</span></p>
    <p><strong>Balance: ‚Çπ<span id="balance">0</span></strong></p>
  </div>


  <div>
  <a id="excelBtn" class="btn"></a>
  <button class="download-btn" onclick="downloadExcel()">‚¨áÔ∏è Download</button>
  <a id="excelDownloadLink"></a>
</div>



<script>
  function downloadExcel() {
    const from = document.getElementById("fromDate").value;
    const to = document.getElementById("toDate").value;

    const link = document.getElementById("excelDownloadLink");
    link.href = `/report/download-excel?from=${from}&to=${to}`;
    link.setAttribute("download", "report.csv");
    link.click();
  }


  
</script>



</div>

<script>
  window.onload = () => {
    const today = new Date().toISOString().split("T")[0];
    document.getElementById("fromDate").value = "2000-01-01";
    document.getElementById("toDate").value = today;
    updateReportTable();
  };

  async function updateReportTable() {
    const from = document.getElementById("fromDate").value;
    const to = document.getElementById("toDate").value;

    try {
      const res = await fetch(`/report/data?from=${from}&to=${to}`);
      const data = await res.json();

      if (data.error) {
        alert(data.error);
        return;
      }

      document.getElementById("totalIncome").innerText = data.totalIncome;
      document.getElementById("totalExpense").innerText = data.totalExpense;
      document.getElementById("balance").innerText = data.totalIncome - data.totalExpense;

      const tbody = document.querySelector("#reportTable tbody");
      tbody.innerHTML = "";

      if (data.transactions.length === 0) {
        tbody.innerHTML = `<tr><td colspan="5" style="text-align:center;">No data found</td></tr>`;
      } else {
        data.transactions.forEach(txn => {
          const row = `
            <tr>
              <td>${new Date(txn.date).toLocaleDateString()}</td>
              <td>${txn.title}</td>
              <td>${txn.category}</td>
              <td>${txn.type}</td>
              <td>‚Çπ${txn.amount}</td>
            </tr>
          `;
          tbody.innerHTML += row;
        });
      }
    } catch (err) {
      console.error("Report load error:", err);
      alert("Error loading report");
    }
  }



document.getElementById('excelBtn').onclick = () => {
  const from = document.getElementById("fromDate").value;
  const to = document.getElementById("toDate").value;
  window.location.href = `/report/download-excel?from=${from}&to=${to}`;
};


</script>
