<% layout('layout') -%>

<!-- Welcome Section -->
<div class="main-section"></div>
<div class="box">
  <h2 class="name">Welcome, <%= userName %>!</h2>
  <div class="day" id="live-day"></div>
  <div class="date" id="live-date"></div>
</div>

<!-- Summary Cards -->
<div class="card-container">
  <div class="income">Income: â‚¹<span id="incomeVal">0</span></div>
  <div class="expense">Expense: â‚¹<span id="expenseVal">0</span></div>
  <div class="savings">Savings: â‚¹<span id="savingsVal">0</span></div>
</div>

<!-- Income Pie Chart -->
<div class="chart">
  <h2 style="text-align: center; margin-top: 40px;">Income Analytics</h2>
  <div style="width: 400px; margin: 0 auto;">
    <canvas id="financeChart"></canvas>
  </div>
</div>

<!-- Chart.js and jQuery -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Injected Transactions -->
<script>
  const transactions = <%- JSON.stringify(transactions) %>;
</script>

<!-- Live Date Script -->
<script>
  const now = new Date();
  document.getElementById('live-day').innerText = now.toLocaleDateString('en-IN', { weekday: 'long' });
  document.getElementById('live-date').innerText = now.toLocaleDateString('en-IN', { day: 'numeric', month: 'long', year: 'numeric' });
</script>

<!-- Dynamic Pie Chart Script -->
<script>
  let incomeTotal = 0;
  let expenseTotal = 0;

  transactions.forEach(tx => {
    if (tx.type === 'income') incomeTotal += tx.amount;
    else if (tx.type === 'expenses') expenseTotal += tx.amount;
  });

  const savingsTotal = incomeTotal - expenseTotal;

  // Update Text Values
  document.getElementById('incomeVal').textContent = incomeTotal;
  document.getElementById('expenseVal').textContent = expenseTotal;
  document.getElementById('savingsVal').textContent = savingsTotal;

  // Pie Chart Update
  const pieCtx = document.getElementById('financeChart').getContext('2d');
  new Chart(pieCtx, {
    type: 'pie',
    data: {
      labels: ['Income', 'Expense', 'Savings'],
      datasets: [{
        label: 'Monthly Overview',
        data: [incomeTotal, expenseTotal, savingsTotal],
        backgroundColor: [
          'rgba(34, 197, 94, 0.8)',   // Income - Green
          'rgba(239, 68, 68, 0.8)',   // Expense - Red
          'rgba(59, 130, 246, 0.8)'   // Savings - Blue
        ],
        borderWidth: 1
      }]
    },
    options: {
      responsive: true,
      plugins: {
        legend: { position: 'bottom' }
      }
    }
  });




</script>
<div class="chartline">
  <h2 style="text-align: center; margin-top: 30px;">ðŸ“ˆ Income & Expense Trend</h2><br>

  <!-- ðŸ”¹ Date Filter Form -->
  <div class="date-filter-container " >
  <label class="date-label">
    From:
    <input type="date" id="fromDate" class="date-input">
  </label>

  <label class="date-label">
    To:
    <input type="date" id="toDate" class="date-input">
  </label>

  <button onclick="filterChartByDate()" class="apply-btn">ðŸŽ¯ Apply</button>
</div>

  <!-- ðŸ”¹ Chart Canvas -->
  <div style="width: 90%; max-width: 700px; margin: 0 auto;">
    <canvas id="lineChart"></canvas>
  </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  const allTransactions = <%- JSON.stringify(transactions) %>;
  let lineChart;

  function renderLineChart(filteredTransactions) {
    const labels = filteredTransactions.map(tx =>
      new Date(tx.date).toLocaleDateString('en-IN')
    );

    const incomeData = filteredTransactions.map(tx =>
      tx.type === 'income' ? tx.amount : 0
    );

    const expenseData = filteredTransactions.map(tx =>
      tx.type === 'expenses' ? tx.amount : 0
    );

    const ctx = document.getElementById('lineChart').getContext('2d');

    if (lineChart) lineChart.destroy(); // Remove previous chart before rendering new one

    lineChart = new Chart(ctx, {
      type: 'line',
      data: {
        labels,
        datasets: [
          {
            label: 'Income',
            data: incomeData,
            borderColor: 'green',
            backgroundColor: 'rgba(34,197,94,0.2)',
            tension: 0.3
          },
          {
            label: 'Expenses',
            data: expenseData,
            borderColor: 'red',
            backgroundColor: 'rgba(239,68,68,0.2)',
            tension: 0.3
          }
        ]
      },
      options: {
        responsive: true,
        plugins: {
          legend: { position: 'bottom' }
        },
        scales: {
          y: { beginAtZero: true }
        }
      }
    });
  }

  // Initial chart render
  renderLineChart(allTransactions);

  // On Apply Button Click
  function filterChartByDate() {
    const fromInput = document.getElementById('fromDate').value;
    const toInput = document.getElementById('toDate').value;

    if (!fromInput || !toInput) {
      alert('Please select both From and To dates.');
      return;
    }

    const fromDate = new Date(fromInput);
    const toDate = new Date(toInput);
    toDate.setHours(23, 59, 59, 999); // Include entire 'to' day

    const filtered = allTransactions.filter(tx => {
      const txDate = new Date(tx.date);
      return txDate >= fromDate && txDate <= toDate;
    });

    renderLineChart(filtered);
  }
</script>



<script>
  function checkReminders() {
    fetch('/reminders/check')
      .then(res => res.json())
      .then(reminders => {
        reminders.forEach(r => {
          const toast = document.createElement("div");
          toast.className = "toast";
          toast.innerText = "ðŸ”” " + r.message;
          document.body.appendChild(toast);

          setTimeout(() => toast.remove(), 5000); // Remove after 5 sec
        });
      })
      .catch(err => console.error('Reminder Check Failed:', err));
  }

  setInterval(checkReminders, 60000); // check every 1 minute
</script>




<style>
/* ==== BASE STYLING ==== */
body {
  margin: 0;
  padding: 0;
  font-family: 'Poppins', 'Segoe UI', sans-serif;
  background: linear-gradient(to right top, #f0f4f8, #d9e2ec);
  color: #1e293b;
  min-height: 100vh;
  overflow-x: hidden;
  overflow-y: auto;
}

/* ==== MAIN SECTION (Welcome) ==== */
.main-section {
  padding: 1.5rem 2rem;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  background: linear-gradient(120deg, #3b82f6, #6366f1);
  color: white;
  border-radius: 0 0 24px 24px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  animation: fadeInSlide 1.2s ease forwards;
  
}

.main-section:hover{
   box-shadow: 0 4px 10px rgba(0, 0, 0, 0.4);
     transition: transform 0.2s ease, box-shadow 0.4s ease;
}

.name {
  font-size: 2rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  animation: fadeInUp 1.5s ease forwards;
}

.day, .date {
  font-size: 1.1rem;
  opacity: 0.9;
  margin: 0.2rem 0;
  animation: fadeInUp 1.8s ease forwards;
}

/* ==== BOX CONTAINER ==== */
.box {
  max-width: 1100px;
  margin: 2rem auto;
  padding: 2rem;
  background-color: #ffffff;
  border-radius: 16px;
  box-shadow: 0 6px 24px rgba(0, 0, 0, 0.1);
  animation: fadeInSlide 1.4s ease forwards;
     transition: transform 0.2s ease, box-shadow 0.4s ease;
}

.box:hover{
  box-shadow: 0 6px 24px rgba(0, 0, 0, 0.4);
}

/* ==== PIE CHART + CARDS WRAPPER ==== */
.chart-summary-wrapper {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  gap: 50px;
  flex-wrap: wrap;
  margin-top: 40px;
  margin-bottom: 60px;
}

/* ==== PIE CHART ==== */
.chart {
  position: relative;
  bottom: 180px;
  left: 500px;
  width: 400px;
  padding: 20px;

  transition: all 0.3s ease;
}

.chart h2 {
  text-align: center;
  font-size: 1.5rem;
  margin-bottom: 1rem;
}

/* ==== SUMMARY CARDS ==== */
.card-container {
  display: flex;
  flex-direction: column;
  gap: 20px;
  width: 220px;
  position: relative;
  top: 200px;
}

.card-container > div {
  background-color: #f9fafb;
  border-left: 6px solid #3b82f6;
  padding: 18px 22px;
  border-radius: 12px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.06);
  font-size: 1.1rem;
  font-weight: 600;
  color: #1f2937;
  transition: all 0.3s ease;
}

.card-container > div:hover {
  transform: translateY(-4px);
  background-color: #eef4ff;
  border-color: #6366f1;
}

/* ==== LINE CHART CONTAINER (Adjust if needed) ==== */
.line-chart-section {
  margin-top: 40px;
  padding: 1rem;
  background: #fff;
  border-radius: 16px;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);
}


.chartline{
  position: relative;
  bottom: 50px;
}

/* ==== ANIMATIONS ==== */
@keyframes fadeInUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes fadeInSlide {
  from {
    transform: translateY(-30px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* ==== RESPONSIVE DESIGN FOR PIE + LINE CHART DASHBOARD ==== */
@media screen and (max-width: 768px) {

  /* Pie Chart */
  .chart {
    position: static;
    width: 90%;
    margin: 0 auto;
    padding: 10px;
  }

  .chart h2 {
    font-size: 1.2rem;
    margin-top: 20px;
  }

  /* Summary Cards */
  .card-container {
    flex-direction: column;
    align-items: center;
    width: 100%;
    top: 0;
    margin-top: 20px;
  }

  .card-container > div {
    width: 90%;
    text-align: center;
  }

  /* Line Chart Section */
  .chartline {
    position: static;
    margin-top: 40px;
  }

  .chartline h2 {
    font-size: 1.2rem;
    padding: 0 10px;
  }

  /* Date Filter */
  .date-filter-container {
    flex-direction: column;
    align-items: stretch;
    width: 90%;
    margin: 0 auto 30px auto;
    padding: 16px;
    margin-left: 0;
    gap: 15px;
  }

  .apply-btn {
    width: 100%;
    top: 0;
  }

  /* Chart Canvases */
  canvas {
    width: 100% !important;
    height: auto !important;
  }
}



.date-filter-container {
  display: flex;
  justify-content: center;
  align-items: center;
 margin-left:360px;
  gap: 20px;
  width: 800px;
  padding: 20px 30px;
  border-radius: 16px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  margin-bottom: 30px;
  font-family: 'Poppins', sans-serif;
}


.date-filter-container:hover{
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease, box-shadow 0.10s ease;
}

.date-label {
  font-weight: 500;
  color: #1e293b;
  display: flex;
  flex-direction: column;
  font-size: 14px;
}

.date-input {
  margin-top: 6px;
  padding: 8px 12px;
  border: 1px solid #cbd5e1;
  border-radius: 8px;
  font-size: 14px;
  background-color: #fff;
  transition: border-color 0.3s ease;
}

.date-input:focus {
  border-color: #3b82f6;
  outline: none;
}

.apply-btn {
  position: relative;
  top:10px;
  padding: 10px 20px;
  background: linear-gradient(to right, #2563eb, #3b82f6);
  color: #fff;
  border: none;
  border-radius: 10px;
  font-weight: 600;
  font-size: 14px;
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.apply-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 16px rgba(59, 130, 246, 0.3);
}


</style>
